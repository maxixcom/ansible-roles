# {{ ansible_managed }}
# Configuration file for varnish
#
# /etc/init.d/varnish expects the variables $DAEMON_OPTS, $NFILES and $MEMLOCK
# to be set from this shell script fragment.
#
# Note: If systemd is installed, this file is obsolete and ignored.  You will
# need to copy /lib/systemd/system/varnish.service to /etc/systemd/system/ and
# edit that file.

# Should we start varnishd at boot?  Set to "no" to disable.
START=yes

# Maximum number of open files (for ulimit -n)
NFILES=131072

# Maximum locked memory size (for ulimit -l)
# Used for locking the shared memory log in memory.  If you increase log size,
# you need to increase this number as well
MEMLOCK=82000

# Default varnish instance name is the local nodename.  Can be overridden with
# the -n switch, to have more instances on a single server.
# INSTANCE=$(uname -n)

# This file contains 4 alternatives, please use only one.

## Alternative 1, Minimal configuration, no VCL
#
# Listen on port 6081, administration on localhost:6082, and forward to
# content server on localhost:8080.  Use a 1GB fixed-size cache file.
#
# DAEMON_OPTS="-a :6081 \
#              -T localhost:6082 \
# 	     -b localhost:8080 \
# 	     -u varnish -g varnish \
#            -S /etc/varnish/secret \
# 	     -s file,/var/lib/varnish/$INSTANCE/varnish_storage.bin,1G"


## Alternative 2, Configuration with VCL
#
# Listen on port 6081, administration on localhost:6082, and forward to
# one content server selected by the vcl file, based on the request.  Use a 1GB
# fixed-size cache file.
#
#DAEMON_OPTS="-a :6081 \
#             -T localhost:6082 \
#             -f /etc/varnish/default.vcl \
#             -S /etc/varnish/secret \
#             -s malloc,256m"


## Alternative 3, Advanced configuration
#
# See varnishd(1) for more information.
#
# # Main configuration file. You probably want to change it :)
{% if varnish.config.vcl_config_path is defined and varnish.config.vcl_config_path %}
VARNISH_VCL_CONF={{ varnish.config.vcl_config.path }}
{% else %}
VARNISH_VCL_CONF=/etc/varnish/default.vcl
{% endif %}
#
# # Default address and port to bind to
# # Blank address means all IPv4 and IPv6 interfaces, otherwise specify
# # a host name, an IPv4 dotted quad, or an IPv6 address in brackets.
{% if varnish.config.ip is defined and varnish.config.ip %}
VARNISH_LISTEN_ADDRESS={{ varnish.config.ip }}
{% else %}
VARNISH_LISTEN_ADDRESS=
{% endif %}

{% if varnish.config.port is defined and varnish.config.port %}
VARNISH_LISTEN_PORT={{ varnish.config.port }}
{% else %}
VARNISH_LISTEN_PORT=6081
{% endif %}
#
# # Telnet admin interface listen address and port
{% if varnish.config.admin_ip is defined and varnish.config.admin_ip %}
VARNISH_ADMIN_LISTEN_ADDRESS={{ varnish.config.admin_ip }}
{% else %}
VARNISH_ADMIN_LISTEN_ADDRESS=127.0.0.1
{% endif %}

{% if varnish.config.admin_port is defined and varnish.config.admin_port %}
VARNISH_ADMIN_LISTEN_PORT={{ varnish.config.admin_port }}
{% else %}
VARNISH_ADMIN_LISTEN_PORT=6082
{% endif %}
#
# # The minimum number of worker threads to start
{% if varnish.config.min_threads is defined and varnish.config.min_threads %}
VARNISH_MIN_THREADS={{ varnish.config.min_threads }}
{% else %}
VARNISH_MIN_THREADS=1
{% endif %}
#
# # The Maximum number of worker threads to start
{% if varnish.config.max_threads is defined and varnish.config.max_threads %}
VARNISH_MAX_THREADS={{ varnish.config.max_threads }}
{% else %}
VARNISH_MAX_THREADS=1000
{% endif %}
#
# # Idle timeout for worker threads
{% if varnish.config.thread_timeout is defined and varnish.config.thread_timeout %}
VARNISH_THREAD_TIMEOUT={{ varnish.config.thread_timeout }}
{% else %}
VARNISH_THREAD_TIMEOUT=120
{% endif %}
#
# # Cache file location
VARNISH_STORAGE_FILE=/var/lib/varnish/$INSTANCE/varnish_storage.bin
#
# # Cache file size: in bytes, optionally using k / M / G / T suffix,
# # or in percentage of available disk space using the % suffix.
VARNISH_STORAGE_SIZE=1G
#
# # File containing administration secret
{% if varnish.config.secret_path is defined and varnish.config.secret_path %}
VARNISH_SECRET_FILE={{ varnish.config.secret_path }}
{% else %}
VARNISH_SECRET_FILE=/etc/varnish/secret
{% endif %}
#
# # Backend storage specification
{% if varnish.config.storage_spec is defined and varnish.config.storage_spec %}
VARNISH_STORAGE={{ varnish.config.storage_spec }}
{% else %}
VARNISH_STORAGE="file,${VARNISH_STORAGE_FILE},${VARNISH_STORAGE_SIZE}"
{% endif %}
#
# # Default TTL used when the backend does not specify one
{% if varnish.config.default_ttl is defined and varnish.config.default_ttl %}
VARNISH_TTL={{ varnish.config.default_ttl }}
{% else %}
VARNISH_TTL=120
{% endif %}
#
# # DAEMON_OPTS is used by the init script.  If you add or remove options, make
# # sure you update this section, too.
DAEMON_OPTS="-a ${VARNISH_LISTEN_ADDRESS}:${VARNISH_LISTEN_PORT} \
              -f ${VARNISH_VCL_CONF} \
              -T ${VARNISH_ADMIN_LISTEN_ADDRESS}:${VARNISH_ADMIN_LISTEN_PORT} \
              -t ${VARNISH_TTL} \
              -w ${VARNISH_MIN_THREADS},${VARNISH_MAX_THREADS},${VARNISH_THREAD_TIMEOUT} \
 	          -S ${VARNISH_SECRET_FILE} \
              -s ${VARNISH_STORAGE}"

## Alternative 4, Do It Yourself
#
# DAEMON_OPTS=""
