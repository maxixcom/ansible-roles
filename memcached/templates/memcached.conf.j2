# {{ ansible_managed }}
# memcached default config file
# 2003 - Jay Bonci <jaybonci@debian.org>
# This configuration file is read by the start-memcached script provided as
# part of the Debian GNU/Linux distribution. 

# Run memcached as a daemon. This command is implied, and is not needed for the
# daemon to run. See the README.Debian that comes with this package for more
# information.
-d

# Log memcached's output to /var/log/memcached
{% if memcached.config.logfile is defined and memcached.config.logfile %}
logfile {{ memcached.config.logfile }}
{% endif %}

# Be verbose
# -v

# Be even more verbose (print client commands as well)
# -vv

# Start with a cap of 64 megs of memory. It's reasonable, and the daemon default
# Note that the daemon will grow to this size, but does not start out holding this much
# memory
{% if memcached.config.memory is defined and memcached.config.memory %}
-m {{ memcached.config.memory }}
{% endif %}

# Default connection port is 11211
{% if memcached.config.port is defined and memcached.config.port %}
-p {{ memcached.config.port }}
{% endif %}

# Run the daemon as root. The start-memcached will default to running as root if no
# -u command is present in this config file

{% if memcached.user is defined and memcached.user %}
-u {{ memcached.user }}
{% endif %}

# Specify which IP address to listen on. The default is to listen on all IP addresses
# This parameter is one of the only security measures that memcached has, so make sure
# it's listening on a firewalled interface.
{% if memcached.config.ip is defined and memcached.config.ip %}
-l {{ memcached.config.ip }}
{% endif %}

# Limit the number of simultaneous incoming connections. The daemon default is 1024
{% if memcached.config.num_connections is defined and memcached.config.num_connections %}
-c {{ memcached.config.num_connections }}
{% endif %}

# Lock down all paged memory. Consult with the README and homepage before you do this
# -k

# Return error when memory is exhausted (rather than removing items)
# -M

# Maximize core file limit
# -r
